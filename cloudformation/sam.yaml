---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Description: >-
  AWS Instance Scheduler

Resources:
  LambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Process EC2 instance start/stop schedules
      Handler: handler.run
      Runtime: python3.6
      MemorySize: 128
      Timeout: 300
      CodeUri: ../pkg/src
      AutoPublishAlias: live
      Role: !GetAtt LambdaRole.Arn

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: ec2-permissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ec2:DescribeRegions'
                  - 'ec2:DescribeInstances'
                  - 'ec2:StopInstances'
                  - 'ec2:StartInstances'
                Resource: '*'

  EventRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: Execute EC2 instance scheduler
      ScheduleExpression: cron(0/30 * * * ? *)
      State: ENABLED
      Targets:
        - Arn: !GetAtt LambdaFunction.Arn
          Id: !Ref LambdaFunction

  LambdaPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt LambdaFunction.Arn
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      SourceArn: !GetAtt EventRule.Arn

  LogGroup:
    Type: "AWS::Logs::LogGroup"
    Properties:
      LogGroupName: !Sub '/aws/lambda/${LambdaFunction}'
      RetentionInDays: 7
